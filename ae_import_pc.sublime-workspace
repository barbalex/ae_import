{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tax",
				"taxonomy_id"
			],
			[
				"cre",
				"createDatabase"
			],
			[
				"conn",
				"connection"
			],
			[
				"rou",
				"routes"
			],
			[
				"Ap",
				"ApArtId"
			],
			[
				"beob",
				"beobId"
			],
			[
				"pro",
				"programmAp"
			],
			[
				"J",
				"JBerJahr"
			],
			[
				"node",
				"nodeText2"
			],
			[
				"date",
				"date1"
			],
			[
				"dat",
				"date1"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index.js",
			"settings":
			{
				"buffer_size": 3176,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/importTaxonomiesLr.js",
			"settings":
			{
				"buffer_size": 1838,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/importTaxonomiesNonLr.js",
			"settings":
			{
				"buffer_size": 903,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/importTaxObjectsFauna.js",
			"settings":
			{
				"buffer_size": 2031,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/importTaxObjectsFaunaLevel1.js",
			"settings":
			{
				"buffer_size": 1094,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 257.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			]
		],
		"width": 424.0
	},
	"console":
	{
		"height": 223.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/alex/ae_import",
		"/C/Users/alex/ae_import/sql",
		"/C/Users/alex/ae_import/src"
	],
	"file_history":
	[
		"/C/Users/alex/ae_import/src/importTaxonomiesNonLr.js",
		"/C/Users/alex/ae_import/src/nonLrTaxonomies.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsFloraLevel1.js",
		"/C/Users/alex/ae_import/src/importTaxObjectsFauna.js",
		"/C/Users/alex/ae_import/src/importTaxObjectsFaunaLevel1.js",
		"/C/Users/alex/ae_import/src/importTaxObjectsFaunaLevel2.js",
		"/C/Users/alex/ae_import/src/importTaxObjectsFaunaLevel3.js",
		"/C/Users/alex/ae_import/src/importTaxObjectsFaunaLevel4.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsFloraLevel2.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsFloraLevel3.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsMooseLevel1.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsMooseLevel2.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsMooseLevel3.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsMooseLevel4.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsPilzeLevel1.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsPilzeLevel2.js",
		"/C/Users/alex/ae_import/src/buildTaxObjectsFaunaLevel4.js",
		"/C/Users/alex/ae_import/src/buildLrTaxonomieObject.js",
		"/C/Users/alex/ae_import/src/importTaxonomiesLr.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsFaunaLevel1.js",
		"/C/Users/alex/ae_import/src/importUsers.js",
		"/C/Users/alex/ae_import/src/importCategories.js",
		"/C/Users/alex/ae_import/src/importOrganizations.js",
		"/C/Users/alex/ae_import/sql/createTables.sql",
		"/C/Users/alex/ae_import/src/rebuildObjects.js",
		"/C/Users/alex/ae_import/.eslintrc.json",
		"/C/Users/alex/ae_import/package.json",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildLrTaxonomieObject.js",
		"/C/Users/alex/ae_import/.gitignore",
		"/C/Users/alex/ae_import/src/importGroups.js",
		"/C/Users/alex/ae_import/src/groups.js",
		"/C/Users/alex/ae_import/pgDbPass.json",
		"/C/Users/alex/ae_import/configuration.js",
		"/C/Users/alex/ae_import/dbConnection.js",
		"/C/Users/alex/ae_import/src/buildGroups.js",
		"/C/Users/alex/ae_import/sql/createDatabase.sql",
		"/C/Users/alex/ae_structure_v1_to_v3/src/setParents.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/setParentInLrTaxObjects.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/rebuildObjects.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/nonLrTaxonomies.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/groups.json",
		"/C/Users/alex/ae_structure_v1_to_v3/src/getTaxonomieObjects.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/getObjects.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxonomiesNonLr.js",
		"/C/Users/alex/ae_structure_v1_to_v3/index.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxonomiesLr.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsPilzeLevel2.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsPilzeLevel1.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsPilze.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsMooseLevel4.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsMooseLevel3.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsMooseLevel2.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsMooseLevel1.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsMoose.js",
		"/C/Users/alex/ae_structure_v1_to_v3/package.json",
		"/C/Users/alex/ae_structure_v1_to_v3/.eslintrc.json",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildGroups.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsFauna.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsFaunaLevel2.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsFaunaLevel3.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsFaunaLevel4.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsFlora.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsFloraLevel1.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsFloraLevel2.js",
		"/C/Users/alex/ae_structure_v1_to_v3/src/buildTaxObjectsFloraLevel3.js",
		"/D/gd/artendb/push.txt",
		"/C/Users/Alexander/ae_structure_v1_to_v3/src/buildTaxObjectsFauna.js",
		"/C/Users/Alexander/ae_structure_v1_to_v3/src/buildTaxonomiesNonLr.js",
		"/C/Users/Alexander/ae_structure_v1_to_v3/src/buildTaxonomiesLr.js",
		"/C/Users/Alexander/ae_structure_v1_to_v3/package.json",
		"/D/Google Drive/artendb/push.txt",
		"/C/Users/alex/ae_structure_v1_to_v3/readme.md",
		"/C/Users/alex/ae_taxonomien/index.js",
		"/C/Users/alex/apflora_api/configuration.js",
		"/C/Users/alex/apflora_api/pgDbPass.json",
		"/C/Users/alex/apflora_api/gulp-tasks/prod_copy_root_to_dist.js",
		"/C/Users/alex/apflora_api/appPass.json",
		"/C/Users/alex/apflora_api/dbPass.json",
		"/D/Google Drive/apflora/pgDbPass.json",
		"/C/Users/alex/apflora_api/gulp-tasks/prod_sftp.js",
		"/C/Users/alex/apflora_api/gulp-tasks/prod_copy.js",
		"/C/Users/alex/apflora_api/src/routes/beobKarteGet.js",
		"/C/Users/alex/apflora_api/test/beobKarte.js",
		"/C/Users/alex/apflora_api/queries/tabelleUpdateApflora.js",
		"/C/Users/alex/apflora_api/queries/beobKarte.js",
		"/C/Users/alex/.ssh/alex.pub",
		"/C/Users/alex/apflora_api/pgPlugin.js",
		"/C/Users/alex/apflora_api/.gitignore",
		"/C/Users/alex/apflora_api/dbConnection.js",
		"/C/Users/alex/apflora_api/sql/create_databases.sql",
		"/C/Users/alex/AppData/Roaming/postgresql/pgpass.conf",
		"/D/Google Drive/apflora/v2/createDbStructure.txt",
		"/D/Google Drive/apflora/v2/installDb.txt",
		"/C/Users/alex/.ssh/alex",
		"/C/Users/alex/.ssh/alex.ppk",
		"/C/Users/alex/apflora_api/sql/triggers.sql",
		"/C/Users/alex/apflora_api/sql/createViews.sql",
		"/C/Users/alex/apflora_api/sql/create_tables_beob.sql",
		"/C/Users/alex/apflora_api/sql/create_tables_apflora.sql",
		"/C/Users/alex/apflora_api/sql/countRows.sql",
		"/C/Users/alex/apflora_api/queries/tabelleInsertApflora.js",
		"/C/Users/alex/apf2_api/sql/create_tables_apflora.sql",
		"/C/Users/alex/apf2_api/sql/triggers.sql",
		"/C/Users/alex/apflora_api/src/routes/apflora.js",
		"/C/Users/alex/apflora_api/queries/tree/assozarten.js",
		"/C/Users/alex/apflora_api/queries/tree/apziel.js",
		"/C/Users/alex/apflora_api/queries/tree/beobNichtBeurteilt.js",
		"/C/Users/alex/apflora_api/queries/tree/ber.js",
		"/C/Users/alex/apflora_api/queries/tabelleInsertMultipleApflora.js",
		"/C/Users/alex/apflora_api/test/apfloraInsertMultiple.js",
		"/C/Users/alex/apflora_api/server.js",
		"/C/Users/alex/apflora_api/queries/tabelleSelectApfloraNumber.js",
		"/C/Users/alex/apflora_api/queries/tabelleSelectBeobNumber.js",
		"/C/Users/alex/apf2_api/sql/create_databases.sql",
		"/C/Users/alex/apflora_api/queries/feldkontrInsert.js",
		"/C/Users/alex/apflora_api/test/feldkontrInsert.js",
		"/C/Users/alex/apflora_api/queries/popInsertKopie.js",
		"/C/Users/alex/apflora_api/test/apflora.js",
		"/C/Users/alex/apflora_api/test/popInsertKopie.js",
		"/C/Users/alex/apflora_api/src/routes/treeGet.js",
		"/C/Users/alex/apflora_api/test/tree.js",
		"/C/Users/alex/apflora_api/test/tpopsKarte.js",
		"/C/Users/alex/apflora_api/queries/tpopsKarte.js",
		"/C/Users/alex/apflora_api/src/routes/tpopsKarteGet.js",
		"/C/Users/alex/apflora_api/test/tpopMassnTypen.js",
		"/C/Users/alex/apflora_api/src/routes/tpopMassnTypenGet.js",
		"/C/Users/alex/apflora_api/queries/tpopMassnTypen.js",
		"/C/Users/alex/apflora_api/test/tpopKoordFuerProgramm.js"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 145.0,
		"where_history":
		[
			"C:\\Users\\alex\\ae_import",
			"C:\\Users\\alex\\ae_structure_v1_to_v3",
			"C:\\Users\\alex\\apflora_api",
			"C:\\Users\\alex\\apflora_api\\test",
			"C:\\Users\\alex\\apflora_api\\src\\routes",
			"C:\\Users\\alex\\apflora_api",
			"C:\\Users\\alex\\artendb",
			"C:\\Users\\alex\\ae"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"objects",
			"'",
			"buildTaxObjectsFaunaLevel1",
			"buildTaxObjectsFaunaLevel2",
			"buildTaxObjectsFaunaLevel3",
			"buildTaxObjectsFaunaLevel4",
			"taxObjectsFaunaLevel3",
			"const uuid = require('node-uuid')",
			"taxObjectsFaunaLevel2",
			"taxObjectsFaunaLevel1",
			"taxonomy",
			"taxonomies",
			"db",
			"'",
			"Taxonomie: taxFauna._id",
			"buildTaxonomiesLr",
			"'",
			"`}\"",
			"'}`",
			"`{'",
			"'",
			"),    (",
			"\n",
			"),(",
			"\n",
			"\"",
			"\n",
			"\"\"",
			"node-uuid",
			"'",
			"group",
			"groups",
			"group",
			"db",
			",\n    'Organisation mit Schreibrecht': 'FNS Kt. ZH'",
			"Standardtaxonomie:",
			"Gruppe:",
			"Link:",
			"Datenstand:",
			"Beschreibung:",
			"\n    Typ: 'Taxonomie',",
			"Name:",
			"organizations",
			"organization",
			"buildGroups",
			"pgp",
			"\"",
			"buildGroups",
			"group",
			"propertyCollection",
			"taxonomy",
			"links",
			"\"name\"",
			"db",
			"result",
			"return reject",
			"taxonomy-object",
			"db",
			"sourceDb",
			"connection2",
			"aeDb",
			"sourceDb, aeDb",
			"aeDb",
			"aeDb.save",
			".view('ae",
			".view",
			"view",
			"db.Save",
			"sourceDb",
			"bulkSave",
			"db",
			"sourceDb",
			"aeDb",
			"Gruppe",
			"buildTaxonomiesNonLr",
			"aeDbConn",
			"buildNonLrTaxonomies",
			"buildLrTaxonomies",
			"rows",
			"config.db.userName",
			"dbPass",
			"insert/apflora/tabelle",
			"\"",
			"RETURNING",
			"to_number",
			"tpopInsertKopie",
			"\"",
			"apfloraPut",
			"apfloraDelete.js",
			"jberUebersicht.js",
			"jber.js",
			"jberUebersicht",
			"\"",
			"beobNichtZuordnen",
			"connection",
			"\"",
			"apfDb from aplist",
			"require('../routes')",
			"'../src",
			"'../queries",
			"const mysql = require('mysql')\nconst config = require('../configuration')\nconst escapeStringForSql = require('./escapeStringForSql')\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: config.db.userName,\n  password: config.db.passWord,\n  database: 'apflora'\n})",
			"const mysql = require('mysql')\nconst config = require('../configuration')\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: config.db.userName,\n  password: config.db.passWord,\n  database: 'beob'\n})",
			"const mysql = require('mysql')\nconst config = require('../configuration')\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: config.db.userName,\n  password: config.db.passWord,\n  database: 'apflora'\n})",
			"feldkontrPost",
			"\"",
			"beobDistzutpopEvabGet",
			"apInsertPost",
			"config",
			"queryLrDelarze",
			"queryTabelleInsertApflora",
			"queryTabelleSelectBeobString",
			"queryTabelleSelectApfloraString",
			"./queries/qkTpopOhneMassnber.js",
			"json2csv",
			"queryBeobKarte",
			"queryBeobDistzutpopEvab",
			"queryApliste",
			"queryApKarte",
			"queryApInsert",
			"queryAnmeldung",
			"aktualisiereArteigenschaften",
			"json2csv",
			"adressen_get",
			"exportView",
			"queryAdressen",
			"exportView",
			"queryBeobZuordnen",
			"queryBeobNaechsteTpop"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"`",
			"importTaxObjectsFaunaLevel1",
			"importTaxObjectsFaunaLevel2",
			"importTaxObjectsFaunaLevel3",
			"importTaxObjectsFaunaLevel4",
			"taxObjectsFaunaLevel4",
			"const uuid = require(`node-uuid`)",
			"taxObjectsFaunaLevel3",
			"taxObjectsFaunaLevel2",
			"tax_object",
			"taxObjectsFaunaLevel1",
			"couchDb",
			"`",
			"taxonomy_id: taxFauna.id",
			"`",
			"\"}`",
			"`}\"",
			"`{\"",
			"`",
			"),\n    (",
			"",
			"),\n    (",
			"",
			" ",
			"",
			"taxonomies",
			"taxonomy",
			"pgDb",
			"",
			"isGroupStandard:",
			"group:",
			"links:",
			"lastUpdated:",
			"description:",
			"",
			"name:",
			"users",
			"user",
			"importGroups",
			"'",
			"name",
			"couchDb",
			"reject",
			"db",
			"sourceDb",
			"sourceDb.save",
			".view('artendb",
			"sourceDb, aeDb",
			"aeDb",
			"db",
			"sourceDb",
			"connection",
			"buildTaxonomiesNonLr",
			"buildTaxonomiesLr",
			"'",
			"BeobNichtZuordnen",
			"'",
			"require('../src/routes')",
			"'..",
			"'../../queries",
			"const pg = require('pg')\nconst config = require('../configuration')\nconst connectionString = config.pg.connectionString",
			"'",
			"beobDistzutpopInfospeziesGet",
			"apPost",
			"adressenGet",
			"  ",
			"DistZuTPop",
			", 'FM9999999')",
			"function ()",
			"function (done)",
			", ",
			"",
			"ziel",
			"tpopmassnber",
			"tpopmassn",
			"tpopkontrzaehl",
			"tpopkontr_typ_werte",
			"tpopkontr",
			"tpopber",
			"tpop",
			"popmassnber",
			"popber",
			"pop_entwicklung_werte",
			"pop",
			"smallint",
			"double precision",
			"integer",
			"smallint",
			"integer",
			"text",
			".\"MutWer\" IS",
			".\"MutWann\" IS",
			"smallint",
			"integer",
			"smallint",
			"integer",
			"",
			"Von wem wurde der Datensatz zuletzt geändert?",
			"Wann wurde der Datensatz zuletzt geändert?",
			"",
			"''",
			"",
			"apber",
			"apberuebersicht",
			"assozart",
			"ber",
			"erfkrit",
			"ap_erfbeurtkrit_werte",
			"idealbiotop",
			"ap",
			"popber",
			"popmassnber",
			"pop",
			"pop_status_werte",
			"tpop_apberrelevant_werte",
			"tpopber",
			"pop_entwicklung_werte",
			"tpopkontr",
			"tpopkontr_typ_werte",
			"adresse",
			"pop_entwicklung_werte",
			"tpopkontrzaehl_methode_werte",
			"tpopkontrzaehl_einheit_werte",
			"tpopmassn",
			"tpopmassn_typ_werte",
			"adresse",
			"tpopmassn_erfbeurt_werte",
			"tpop"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3176,
						"regions":
						{
						},
						"selection":
						[
							[
								2387,
								2387
							]
						],
						"settings":
						{
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1972.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/importTaxonomiesLr.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1838,
						"regions":
						{
						},
						"selection":
						[
							[
								150,
								136
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 816.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/importTaxonomiesNonLr.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 903,
						"regions":
						{
						},
						"selection":
						[
							[
								796,
								781
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/importTaxObjectsFauna.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2031,
						"regions":
						{
						},
						"selection":
						[
							[
								605,
								605
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 102.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/importTaxObjectsFaunaLevel1.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1094,
						"regions":
						{
						},
						"selection":
						[
							[
								108,
								102
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 42.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 232.0
	},
	"pinned_build_system": "",
	"project": "ae_import_pc.sublime-project",
	"replace":
	{
		"height": 92.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 290.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
